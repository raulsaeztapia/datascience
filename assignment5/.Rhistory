setwd("/home/user/datascience/assignment5")
seaflow <- read.csv("seaflow_21min.csv")
data(seaflow)
smp_size <- floor(0.75 * nrow(seaflow))
set.seed(123)
train_ind <- sample(seq_len(nrow(seaflow)), size = smp_size)
train <- seaflow[train_ind, ]
test <-  seaflow[train_ind, ]
library(rpart)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
View(train)
View(train)
aggregate(Summa ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, method="class", data=train)
train$Summa <- as.double(0)
aggregate(Summa ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, method="class", data=train)
aggregate(Summa ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, FUN = sum)
View(train)
aggregate(Summa ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, FUN = length)
aggregate(Summa ~  fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, FUN = function(x) {sum(x) / length(x)})
aggregate(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, FUN = function(x) {sum(x) / length(x)})
aggregate(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, FUN = function(x) {sum(x) / length(x)})
train$Summa <- as.integer(0)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, method="class", data=train)
train$Summa <-  cbind(yval2, yprob, nodeprob)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, na.action = TRUE, method = "class" ,data=train)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, na.action = FALSE, method = "class" ,data=train)
fit <- rpart(Summa ~ fsc_small + fsc_perp, na.action = FALSE, method = "class" ,data=train)
fit <- rpart(Summa ~ fsc_small, na.action = FALSE, method = "class" ,data=train)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, method = "class" ,data=train)
setwd("~/datascience/assignment5")
fit <- rpart(Train ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, method = "class" ,data=train)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train)
plot(fit)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, control=rpart.control(minsplit=2, minbucket=1, cp=0.001))
plot(fit)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, control=rpart.control(minsplit=2, minbucket=1))
plot(fit)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, control=rpart.control(minsplit=2))
plot(fit)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train)
plot(fit)
sample(train, size = 100)
sample(train, size = 10, replace = TRUE)
example <- sample(train, size = 10, replace = TRUE)
View(example)
print/fit)
print(fit)
train$Summa <- 1
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train)
print(fit)
print(model)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = class)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
print(model)
print(fit)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "anova",
control = rpart.control(minsplit = 1))
print(fit)
plot(fit)
sample(seaflow, replace = TRUE)
train <- sample(seaflow, replace = TRUE)
test <- sample(seaflow, replace = TRUE)
View(test)
View(train)
train$Summa <- as.integer(0)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=test, method = "class")
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
train <- sample(seaflow, replace = TRUE)
setwd("/home/user/datascience/assignment5")
seaflow <- read.csv("seaflow_21min.csv")
train <- sample(seaflow, replace = TRUE)
test <- sample(seaflow, replace = TRUE)
train$Summa <- as.integer(0)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
fit <- rpart(Summa ~ fsc_small.1 + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
fit <- rpart(Summa ~ fsc_small.2 + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
seaflow <- read.csv("seaflow_21min.csv")
train <- sample(seaflow, replace = FALSE)
test <- sample(seaflow, replace = FALSE)
train$Summa <- as.integer(0)
fit <- rpart(Summa ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
setwd("~/datascience/titanic/rsaez")
train <- read.csv("~/datascience/titanic/rsaez/train.csv")
test <- read.csv("~/datascience/titanic/rsaez/test.csv")
fit <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data=train, method="class")
View(test)
seaflow <- read.csv("seaflow_21min.csv")
train <- sample(seaflow, replace = FALSE)
test <- sample(seaflow, replace = FALSE)
setwd("/home/user/datascience/assignment5")
seaflow <- read.csv("seaflow_21min.csv")
train <- sample(seaflow, replace = FALSE)
test <- sample(seaflow, replace = FALSE)
fit <- rpart(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, data=train, method = "class")
plot(fit)
print(fit)
text(fit)
summary(train$pop)
plot(fit, legend.text = TRUE)
plot(fit, text = TRUE)
fancyRpartPlot(fit)
Prediction <- predict(fol, test, type = "class")
fit <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fit, method="class", data=train)
plot(fit)
text(fit)
plot(fit)
fit <- formula(pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small)
model <- rpart(fit, method="class", data=train)
fit <- rpart(formula = pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, method="class", data=train)
plot(fit)
text(fit)
# generamos de nuevo el grafico mas legible
fancyRpartPlot(fit)
# generamos la prediccion
Prediction <- predict(fit, test, type = "class")
print(Prediction)
test$pop_result <- Prediction == test$pop
View(test)
sum(test$pop_result) / length(test$pop_result)
fancyRpartPlot(fit)
View(train)
install.packages('randomForest')
library(randomForest)
fit <- randomForest(formula = pop ~ fsc_small + fsc_perp + fsc_big + pe + chl_big + chl_small, method="class", data=train)
